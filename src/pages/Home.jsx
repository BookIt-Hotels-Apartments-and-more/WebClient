import { useState } from "react";
import { Link } from "react-router-dom";
import { getAllEstablishments } from "../api/establishmentsApi";

const mockHotels = [
  {
    id: 1,
    name: "–ì–æ—Ç–µ–ª—å –ö–∞—Ä–ø–∞—Ç–∏",
    description: "–†–æ–∑–∫—ñ—à–Ω–∏–π –≥–æ—Ç–µ–ª—å –≤ —Å–∞–º–æ–º—É —Å–µ—Ä—Ü—ñ –≥—ñ—Ä",
    image: "https://cf.bstatic.com/xdata/images/hotel/square200/123456789.jpg",
    price: 1800,
    address: "–Ø—Ä–µ–º—á–µ, –£–∫—Ä–∞—ó–Ω–∞",
  },
  {
    id: 2,
    name: "Dnipro Luxe Hotel",
    description: "–°—É—á–∞—Å–Ω–∏–π –≥–æ—Ç–µ–ª—å –±—ñ–ª—è —Ä—ñ—á–∫–∏ —É –î–Ω—ñ–ø—Ä—ñ",
    image: "https://cf.bstatic.com/xdata/images/hotel/square200/234567890.jpg",
    price: 2200,
    address: "–î–Ω—ñ–ø—Ä–æ, –£–∫—Ä–∞—ó–Ω–∞",
  },
  {
    id: 3,
    name: "Odesa Sea View",
    description: "–ó –≤–∏–¥–æ–º –Ω–∞ –º–æ—Ä–µ, –ø–æ—Ä—É—á —ñ–∑ –ø–ª—è–∂–µ–º",
    image: "https://cf.bstatic.com/xdata/images/hotel/square200/345678901.jpg",
    price: 2500,
    address: "–û–¥–µ—Å–∞, –£–∫—Ä–∞—ó–Ω–∞",
  },
  {
    id: 4,
    name: "Kyiv Grand Hotel",
    description: "–ö–æ–º—Ñ–æ—Ä—Ç —É —Ü–µ–Ω—Ç—Ä—ñ —Å—Ç–æ–ª–∏—Ü—ñ",
    image: "https://cf.bstatic.com/xdata/images/hotel/square200/456789012.jpg",
    price: 3000,
    address: "–ö–∏—ó–≤, –£–∫—Ä–∞—ó–Ω–∞",
  },
];

const Home = () => {
  const [search, setSearch] = useState("");
  const [minPrice, setMinPrice] = useState("");
  const [maxPrice, setMaxPrice] = useState("");
  const [sortBy, setSortBy] = useState("");
  const [hotels, setHotels] = useState([]);


//   useEffect(() => {
//   const fetchData = async () => {
//     try {
//       const data = await getAllEstablishments();
//       setHotels(data);
//     } catch (err) {
//       console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –≥–æ—Ç–µ–ª—ñ–≤:", err);
//     }
//   };

//   fetchData();
// }, []);


  const filteredHotels = mockHotels.filter((hotel) => {
    const matchSearch =
      hotel.name.toLowerCase().includes(search.toLowerCase()) ||
      hotel.address.toLowerCase().includes(search.toLowerCase());

    const matchMin = minPrice === "" || hotel.price >= parseInt(minPrice);
    const matchMax = maxPrice === "" || hotel.price <= parseInt(maxPrice);

    return matchSearch && matchMin && matchMax;
  });

//   const filteredHotels = hotels.filter((hotel) => {
//   const matchSearch =
//     hotel.name.toLowerCase().includes(search.toLowerCase()) ||
//     hotel.address.toLowerCase().includes(search.toLowerCase());

//   const matchMin = minPrice === "" || hotel.price >= parseInt(minPrice);
//   const matchMax = maxPrice === "" || hotel.price <= parseInt(maxPrice);

//   return matchSearch && matchMin && matchMax;
// });


  const sortedHotels = [...filteredHotels].sort((a, b) => {
    switch (sortBy) {
      case "price-asc":
        return a.price - b.price;
      case "price-desc":
        return b.price - a.price;
      case "name-asc":
        return a.name.localeCompare(b.name);
      case "name-desc":
        return b.name.localeCompare(a.name);
      default:
        return 0;
    }
  });

  return (
    <div className="container py-5">
      <h1 className="mb-4 fw-bold">–ó–Ω–∞–π–¥—ñ—Ç—å –Ω–∞–π–∫—Ä–∞—â—ñ –≥–æ—Ç–µ–ª—ñ</h1>

      {/* üîç –ü–æ—à—É–∫ —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è */}
      <div className="row mb-4">
        <div className="col-md-3 mb-2">
          <input
            type="text"
            className="form-control"
            placeholder="–ü–æ—à—É–∫ –ø–æ –Ω–∞–∑–≤—ñ –∞–±–æ –ª–æ–∫–∞—Ü—ñ—ó"
            value={search}
            onChange={(e) => setSearch(e.target.value)}
          />
        </div>
        <div className="col-md-2 mb-2">
          <input
            type="number"
            className="form-control"
            placeholder="–ú—ñ–Ω. —Ü—ñ–Ω–∞"
            value={minPrice}
            onChange={(e) => setMinPrice(e.target.value)}
          />
        </div>
        <div className="col-md-2 mb-2">
          <input
            type="number"
            className="form-control"
            placeholder="–ú–∞–∫—Å. —Ü—ñ–Ω–∞"
            value={maxPrice}
            onChange={(e) => setMaxPrice(e.target.value)}
          />
        </div>
        <div className="col-md-3 mb-2">
          <select
            className="form-select"
            value={sortBy}
            onChange={(e) => setSortBy(e.target.value)}
          >
            <option value="">–°–æ—Ä—Ç—É–≤–∞—Ç–∏</option>
            <option value="price-asc">–¶—ñ–Ω–∞ ‚Üë</option>
            <option value="price-desc">–¶—ñ–Ω–∞ ‚Üì</option>
            <option value="name-asc">–ù–∞–∑–≤–∞ A‚ÄìZ</option>
            <option value="name-desc">–ù–∞–∑–≤–∞ Z‚ÄìA</option>
          </select>
        </div>
      </div>

      {/* üè® –í–∏–≤—ñ–¥ –≥–æ—Ç–µ–ª—ñ–≤ */}
      <div className="row">
        {sortedHotels.length > 0 ? (
          sortedHotels.map((hotel) => (
            <div className="col-md-6 col-lg-3 mb-4" key={hotel.id}>
              <div className="card h-100 shadow-sm">
                <img
                  src={hotel.photos?.[0]}
                  className="card-img-top"
                  alt={hotel.name}
                  style={{ height: "180px", objectFit: "cover" }}
                />
                <div className="card-body d-flex flex-column">
                  <h5 className="card-title">{hotel.name}</h5>
                  <p className="card-text text-muted small mb-1">
                    {hotel.address}
                  </p>
                  <p className="card-text small flex-grow-1">
                    {hotel.description}
                  </p>
                  <p className="fw-bold mt-2">–≤—ñ–¥ {hotel.price}‚Ç¥ / –Ω—ñ—á</p>
                  <Link
                    to={`/hotels/${hotel.id}`}
                    className="btn btn-outline-primary btn-sm mt-auto"
                  >
                    –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                  </Link>
                </div>
              </div>
            </div>
          ))
        ) : (
          <div className="col-12">
            <p className="text-center text-muted">
              –ì–æ—Ç–µ–ª—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ –∑–∞–¥–∞–Ω–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.
            </p>
          </div>
        )}
      </div>
    </div>
  );
};

export default Home;
