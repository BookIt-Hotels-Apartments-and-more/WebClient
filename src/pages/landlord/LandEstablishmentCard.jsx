import { useEffect, useState } from "react";
import {
  getApartmentsByEstablishment,
  deleteApartment,
} from "../../api/apartmentApi";
import {
  getAllBookings,
  deleteBooking,
  checkInBooking,
} from "../../api/bookingApi";
import {
  getAllReviews,
  deleteReview,
} from "../../api/reviewApi";
import { deleteEstablishment } from "../../api/establishmentsApi";
import { Link } from "react-router-dom";

const LandEstablishmentCard = ({ est }) => {
  const [apartments, setApartments] = useState([]);
  const [bookings, setBookings] = useState([]);
  const [reviews, setReviews] = useState([]);
  const [showAddApartment, setShowAddApartment] = useState(false);
  const [newApartment, setNewApartment] = useState({ name: "", price: 0 });

  useEffect(() => {
    loadData();
  }, []);

  const loadData = async () => {
    try {
      const apartmentsData = await getApartmentsByEstablishment(est.id);
      setApartments(apartmentsData);

      const bookingsData = await getAllBookings();
      const filteredBookings = bookingsData.filter((b) =>
        apartmentsData.some((a) => a.id === b.apartmentId)
      );
      setBookings(filteredBookings);

      const reviewsData = await getAllReviews();
      const filteredReviews = reviewsData.filter((r) =>
        apartmentsData.some((a) => a.id === r.apartmentId)
      );
      setReviews(filteredReviews);
    } catch (err) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ:", err);
    }
  };

  const handleDeleteHotel = async () => {
    if (confirm("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –≥–æ—Ç–µ–ª—å?")) {
      await deleteEstablishment(est.id);
      window.location.reload();
    }
  };

  const handleDeleteApartment = async (id) => {
    if (confirm("–í–∏–¥–∞–ª–∏—Ç–∏ –Ω–æ–º–µ—Ä?")) {
      await deleteApartment(id);
      setApartments((prev) => prev.filter((a) => a.id !== id));
    }
  };

  const handleCheckIn = async (bookingId) => {
    try {
      await checkInBooking(bookingId);
      await loadData();
    } catch (err) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ check-in:", err);
    }
  };

  const handleCancelBooking = async (bookingId) => {
    if (confirm("–°–∫–∞—Å—É–≤–∞—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è?")) {
      await deleteBooking(bookingId);
      await loadData();
    }
  };

  const handleDeleteReview = async (reviewId) => {
    if (confirm("–í–∏–¥–∞–ª–∏—Ç–∏ –≤—ñ–¥–≥—É–∫?")) {
      await deleteReview(reviewId);
      setReviews((prev) => prev.filter((r) => r.id !== reviewId));
    }
  };

  const handleChangeApartment = (e) => {
    setNewApartment({ ...newApartment, [e.target.name]: e.target.value });
  };

  const handleAddApartment = async (e) => {
    e.preventDefault();
    // –¢—É—Ç –º–æ–∂–Ω–∞ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ API
    setShowAddApartment(false);
  };

  return (
    <div className="card mb-4 shadow-sm">
      <div className="card-body">
        <h5 className="card-title">{est.name}</h5>
        <p className="text-muted">
          –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–æ–º–µ—Ä—ñ–≤: {apartments.length}
        </p>

        <p className="card-text text-muted">{est.location}</p>
        <p className="card-text">{est.description}</p>
        <button
          className="btn btn-danger btn-sm me-2"
          onClick={handleDeleteHotel}
        >
          –í–∏–¥–∞–ª–∏—Ç–∏ –≥–æ—Ç–µ–ª—å
        </button>
        <Link
          to={`/edit-hotel/${est.id}`}
          className="btn btn-outline-primary btn-sm"
        >
          –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
        </Link>

        <hr />

        <button
          className="btn btn-sm btn-outline-success mb-3"
          onClick={() => setShowAddApartment(true)}
        >
          ‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–º–µ—Ä
        </button>

        {showAddApartment && (
          <form
            onSubmit={handleAddApartment}
            className="border p-3 mb-3 rounded bg-light"
          >
            <div className="mb-2">
              <input
                type="text"
                className="form-control"
                name="name"
                placeholder="–ù–∞–∑–≤–∞"
                value={newApartment.name}
                onChange={handleChangeApartment}
                required
              />
            </div>
            <div className="mb-2">
              <input
                type="number"
                className="form-control"
                name="price"
                placeholder="–¶—ñ–Ω–∞"
                value={newApartment.price}
                onChange={handleChangeApartment}
                required
              />
            </div>
            <button className="btn btn-primary btn-sm" type="submit">
              –î–æ–¥–∞—Ç–∏
            </button>
          </form>
        )}

        <hr />
        <h6>–ù–æ–º–µ—Ä–∏:</h6>
        {apartments.map((apt) => (
          <div
            key={apt.id}
            className="border p-2 mb-2 rounded d-flex justify-content-between"
          >
            <div>
              üõè {apt.name} ‚Äî {apt.price}‚Ç¥
            </div>
            <div>
              <button
                className="btn btn-outline-danger btn-sm"
                onClick={() => handleDeleteApartment(apt.id)}
              >
                –í–∏–¥–∞–ª–∏—Ç–∏
              </button>
              <Link
                to={`/edit-apartment/${apt.id}`}
                className="btn btn-outline-secondary btn-sm ms-2"
              >
                –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
              </Link>
            </div>
          </div>
        ))}

        <hr />
        <h6 className="mt-4">–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è:</h6>
        {bookings.length === 0 ? (
          <p className="text-muted">–ù–µ–º–∞—î –±—Ä–æ–Ω—é–≤–∞–Ω—å</p>
        ) : (
          <ul className="list-group">
            {bookings.map((b) => (
              <li
                key={b.id}
                className="list-group-item d-flex justify-content-between"
              >
                <div>
                  üßë –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {b.userId} ‚Äî {b.dateFrom} ‚ûù {b.dateTo}
                </div>
                <div>
                  <button
                    className="btn btn-sm btn-outline-success me-2"
                    onClick={() => handleCheckIn(b.id)}
                  >
                    –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏
                  </button>
                  <button
                    className="btn btn-sm btn-outline-danger"
                    onClick={() => handleCancelBooking(b.id)}
                  >
                    –°–∫–∞—Å—É–≤–∞—Ç–∏
                  </button>
                </div>
              </li>
            ))}
          </ul>
        )}

        <hr />
        <h6 className="mt-4">–í—ñ–¥–≥—É–∫–∏:</h6>
        {reviews.length === 0 ? (
          <p className="text-muted">–í—ñ–¥–≥—É–∫—ñ–≤ –ø–æ–∫–∏ –Ω–µ–º–∞—î</p>
        ) : (
          <ul className="list-group">
            {reviews.map((r) => (
              <li
                key={r.id}
                className="list-group-item d-flex justify-content-between align-items-center"
              >
                <span>
                  ‚≠ê {r.rating}/5: {r.text}
                </span>
                <button
                  className="btn btn-sm btn-outline-danger"
                  onClick={() => handleDeleteReview(r.id)}
                >
                  –í–∏–¥–∞–ª–∏—Ç–∏
                </button>
              </li>
            ))}
          </ul>
        )}
      </div>
    </div>
  );
};

export default LandEstablishmentCard;
